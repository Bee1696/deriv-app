name: binary-com/deriv-app/release_production
on:
  push:
    tags:
    - production.*
jobs:
  build_test_and_upload_artifact:
    name: Build, Test and upload artifacts 
    environment: Production
    runs-on: Runner_16cores
    container:
      image: node:18.16.0
    env:
      NODE_ENV: production
      DATADOG_APPLICATION_ID: ${{ env.DATADOG_APPLICATION_ID }}
      DATADOG_CLIENT_TOKEN: ${{ env.DATADOG_CLIENT_TOKEN }}
      DATADOG_CLIENT_TOKEN_LOGS: ${{ env.DATADOG_CLIENT_TOKEN_LOGS }}
      DATADOG_SESSION_REPLAY_SAMPLE_RATE: ${{ env.DATADOG_SESSION_REPLAY_SAMPLE_RATE }}
      DATADOG_SESSION_SAMPLE_RATE: ${{ env.DATADOG_SESSION_SAMPLE_RATE }}
      DATADOG_SESSION_SAMPLE_RATE_LOGS: ${{ env.DATADOG_SESSION_SAMPLE_RATE_LOGS }}
      GD_API_KEY: ${{ secrets.GD_API_KEY }}
      GD_APP_ID: ${{ secrets.GD_APP_ID }}
      GD_CLIENT_ID: ${{ secrets.GD_CLIENT_ID }}
      RUDDERSTACK_PRODUCTION_KEY: ${{ env.RUDDERSTACK_PRODUCTION_KEY }}
      RUDDERSTACK_URL: ${{ env.RUDDERSTACK_URL }}
    steps:
    - uses: actions/checkout@v3.6.0
    - uses: "./.github/actions/npm_install_from_cache"
    - uses: "./.github/actions/build"
    - uses: "./.github/actions/versioning"
      with:
        version_name: production
    - uses: actions/upload-artifact@v3.1.1
      with:
        path: packages/core

  publish_cloudflare_production:
    name: Publish to cloudflare production server
    environment: Common
    runs-on: Runner_16cores
    container:
      image: node:18.16.0
    needs:
    - release_production
    env:
      NODE_ENV: production
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    steps:
    - uses: actions/checkout@v3.6.0
    - uses: actions/download-artifact@v3.0.1
      with:
        path: packages
    - uses: "./.github/actions/publish_to_pages_production"

  send_slack_notification:
      name: Send Slack notification
      runs-on: Runner_16cores
      environment: Common
      if: always()
      needs: [build_test_and_upload_artifact, publish_cloudflare_production]
      steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - uses: "./.github/actions/send_slack_notifications"
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          status: ${{ env.WORKFLOW_CONCLUSION }}
          release_type: Production 
          version: $(echo cat packages/core/dist/version | bash)
